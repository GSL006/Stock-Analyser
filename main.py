# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test1.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import pandas as pd
from nsetools import Nse
from PyQt5 import QtCore, QtGui, QtWidgets
from real_time import Ui_stock1
from stock_comp import Ui_Stock_comp
from help_box import func1
from stock_analysis import Ui_stock_analysis
from nse_equity import Ui_Equity
from nse_index import Ui_Index
from PyQt5.QtWidgets import QMessageBox
from xlsxwriter.utility import xl_rowcol_to_cell
from xlsxwriter import worksheet


class Ui_Stocks(object):
    def option1(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_stock1()
        self.ui.setupUi(self.window)
        self.window.show()

    def option2(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Stock_comp()
        self.ui.setupUi(self.window)
        self.window.show()

    def option3(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_stock_analysis()
        self.ui.setupUi(self.window)
        self.window.show()

    def option4(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Equity()
        self.ui.setupUi(self.window)
        self.window.show()

    def option5(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Index()
        self.ui.setupUi(self.window)
        self.window.show()

    def option6(self):
        nse = Nse()
        tp_g = nse.get_top_gainers()
        pd_tp_g = pd.DataFrame(tp_g)
        file_name = 'top_gainers.xlsx'
        q = pd.ExcelWriter(file_name)
        pd_tp_g.to_excel(q)
        q.save()

        df = pd.read_excel(file_name)
        writer = pd.ExcelWriter('enhanced_gainers.xlsx', engine='xlsxwriter')
        df.to_excel(writer, index=False, sheet_name="GAINERS")
        workbook = writer.book
        worksheet = writer.sheets['GAINERS']
        worksheet.set_zoom(90)

        # HEADER FORMATTING

        header_format = workbook.add_format({
            "valign": "vcenter",
            "align": "center",
            "bg_color": "FFCCCB",
            "bold": True,
            'font_color': "FFFFFF"})

        format = workbook.add_format()
        format.set_font_size(15)
        format.set_font_color("#333333")

        money_fmt = workbook.add_format({'num_format': '$#,##0.00'})

        tot_fmt = workbook.add_format({
            'align': 'right', 'num_format': '$#,##0.00', 'bold': True
        })

        worksheet.set_column('A:Z', 30)
        worksheet.set_row(0, 20)
        writer.save()

        tp_l = nse.get_top_losers()
        pd_tp_l = pd.DataFrame(tp_l)
        file_name = 'top_losers.xlsx'
        q = pd.ExcelWriter(file_name)
        pd_tp_l.to_excel(q)
        q.save()
        df = pd.read_excel(file_name)
        writer = pd.ExcelWriter('enhanced_losers.xlsx', engine='xlsxwriter')
        df.to_excel(writer, index=False, sheet_name="LOSERS")
        workbook = writer.book
        worksheet = writer.sheets['LOSERS']
        worksheet.set_zoom(90)

        # HEADER FORMATTING

        header_format = workbook.add_format({
            "valign": "vcenter",
            "align": "center",
            "bg_color": "FFCCCB",
            "bold": True,
            'font_color': "FFFFFF"})

        format = workbook.add_format()
        format.set_font_size(15)
        format.set_font_color("#333333")

        money_fmt = workbook.add_format({'num_format': '$#,##0.00'})

        tot_fmt = workbook.add_format({
            'align': 'right', 'num_format': '$#,##0.00', 'bold': True
        })

        worksheet.set_column('A:Z', 30)
        worksheet.set_row(0, 20)
        writer.save()

        msg = QMessageBox()
        msg.setIcon(QMessageBox.Information)

        # setting message for Message Box
        msg.setText("The requested excel files has been downloaded")

        # setting Message box window title
        msg.setWindowTitle("Downloaded")

        # declaring buttons on Message Box
        msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)

        # start the app
        retval = msg.exec_()

    def option7(self):
        nse = Nse()
        adv_dec = nse.get_advances_declines()
        adv_dec_pd = pd.DataFrame(adv_dec)
        # print(adv_dec_pd)
        file_name = 'advances_declines.xlsx'
        q = pd.ExcelWriter(file_name)
        adv_dec_pd.to_excel(q)
        q.save()

        df = pd.read_excel(file_name)
        writer = pd.ExcelWriter('enhanced_advances.xlsx', engine='xlsxwriter')
        df.to_excel(writer, index=False, sheet_name="ADVANCES")
        workbook = writer.book
        worksheet = writer.sheets['ADVANCES']
        worksheet.set_zoom(90)

        # HEADER FORMATTING

        header_format = workbook.add_format({
            "valign": "vcenter",
            "align": "center",
            "bg_color": "FFCCCB",
            "bold": True,
            'font_color': "FFFFFF"})

        format = workbook.add_format()
        format.set_font_size(15)
        format.set_font_color("#333333")

        money_fmt = workbook.add_format({'num_format': '$#,##0.00'})

        tot_fmt = workbook.add_format({
            'align': 'right', 'num_format': '$#,##0.00', 'bold': True
        })

        worksheet.set_column('A:F', 30)
        worksheet.set_row(0, 20)
        writer.save()

        msg = QMessageBox()
        msg.setIcon(QMessageBox.Information)

        # setting message for Message Box
        msg.setText("The requested excel file has been downloaded")

        # setting Message box window title
        msg.setWindowTitle("Downloaded")

        # declaring buttons on Message Box
        msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)

        # start the app
        retval = msg.exec_()

    def help(self):
        func1()

    def setupUi(self, Stocks):
        Stocks.setObjectName("Stocks")
        Stocks.resize(1068, 959)
        Stocks.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.centralwidget = QtWidgets.QWidget(Stocks)
        self.centralwidget.setObjectName("centralwidget")
        self.real_time_graph = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.option1())
        self.real_time_graph.setGeometry(QtCore.QRect(20, 210, 331, 61))
        self.real_time_graph.setAutoFillBackground(False)
        self.real_time_graph.setStyleSheet("background-color: rgb(85, 170, 255);\n"
                                           "font:  12pt \"Comic Sans MS\";")
        self.real_time_graph.setCheckable(False)
        self.real_time_graph.setDefault(False)
        self.real_time_graph.setFlat(False)
        self.real_time_graph.setObjectName("real_time_graph")
        self.help_button = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.help())
        self.help_button.setGeometry(QtCore.QRect(1020, 20, 41, 41))
        self.help_button.setStyleSheet("background-color: rgb(85, 170, 255);\n"
                                       "font: 75 15pt \"Comic Sans MS\";")
        self.help_button.setObjectName("help_button")
        self.compare_stocks = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.option2())
        self.compare_stocks.setGeometry(QtCore.QRect(20, 320, 331, 61))
        self.compare_stocks.setStyleSheet("background-color: rgb(85, 170, 255);\n"
                                          "font: 12pt \"Comic Sans MS\";")
        self.compare_stocks.setObjectName("compare_stocks")
        self.table = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.option3())
        self.table.setGeometry(QtCore.QRect(20, 430, 331, 61))
        self.table.setStyleSheet("background-color: rgb(85, 170, 255);\n"
                                 "font: 12pt \"Comic Sans MS\";")
        self.table.setObjectName("table")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(400, 20, 311, 51))
        self.label.setStyleSheet("color: rgb(255, 255, 255);\n"
                                 "font: 14pt \"Comic Sans MS\";\n"
                                 "")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(320, 100, 461, 51))
        self.label_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "font: 14pt \"Comic Sans MS\";\n"
                                   "")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(940, 10, 71, 61))
        self.label_3.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "font: 10pt \"Comic Sans MS\";\n"
                                   "")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(380, 210, 401, 61))
        self.label_4.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "font: 10pt \"Comic Sans MS\";\n"
                                   "")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(380, 320, 681, 61))
        self.label_5.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "font: 10pt \"Comic Sans MS\";\n"
                                   "")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(380, 430, 681, 61))
        self.label_6.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "font: 10pt \"Comic Sans MS\";\n"
                                   "")
        self.label_6.setObjectName("label_6")
        self.equity = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.option4())
        self.equity.setGeometry(QtCore.QRect(20, 540, 331, 61))
        self.equity.setStyleSheet("background-color: rgb(85, 170, 255);\n"
                                  "font: 12pt \"Comic Sans MS\";")
        self.equity.setObjectName("equity")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(380, 540, 681, 61))
        self.label_7.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "font: 10pt \"Comic Sans MS\";\n"
                                   "")
        self.label_7.setObjectName("label_7")
        self.index = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.option5())
        self.index.setGeometry(QtCore.QRect(20, 650, 331, 61))
        self.index.setStyleSheet("background-color: rgb(85, 170, 255);\n"
                                 "font: 12pt \"Comic Sans MS\";")
        self.index.setObjectName("index")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(380, 650, 681, 61))
        self.label_8.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "font: 10pt \"Comic Sans MS\";\n"
                                   "")
        self.label_8.setObjectName("label_8")
        self.topg = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.option6())
        self.topg.setGeometry(QtCore.QRect(20, 760, 331, 61))
        self.topg.setStyleSheet("background-color: rgb(85, 170, 255);\n"
                                "font: 12pt \"Comic Sans MS\";")
        self.topg.setObjectName("topg")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(380, 760, 681, 61))
        self.label_9.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "font: 10pt \"Comic Sans MS\";\n"
                                   "")
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(380, 870, 681, 61))
        self.label_10.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "font: 10pt \"Comic Sans MS\";\n"
                                    "")
        self.label_10.setObjectName("label_10")
        self.ad = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.option7())
        self.ad.setGeometry(QtCore.QRect(20, 870, 331, 61))
        self.ad.setStyleSheet("background-color: rgb(85, 170, 255);\n"
                              "font: 12pt \"Comic Sans MS\";")
        self.ad.setObjectName("ad")
        Stocks.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(Stocks)
        self.statusbar.setObjectName("statusbar")
        Stocks.setStatusBar(self.statusbar)

        self.retranslateUi(Stocks)
        QtCore.QMetaObject.connectSlotsByName(Stocks)

    def retranslateUi(self, Stocks):
        _translate = QtCore.QCoreApplication.translate
        Stocks.setWindowTitle(_translate("Stocks", "Stock Analyser"))
        self.real_time_graph.setText(_translate("Stocks", "Real time graph"))
        self.help_button.setText(_translate("Stocks", "?"))
        self.compare_stocks.setText(_translate("Stocks", "Compare two stocks"))
        self.table.setText(_translate("Stocks", "Tabular Analysis"))
        self.label.setText(_translate("Stocks", "Welcome to Stock Analyser "))
        self.label_2.setText(_translate("Stocks", "Choose any one of the options given below"))
        self.label_3.setText(_translate("Stocks", "Help--->"))
        self.label_4.setText(_translate("Stocks", "Displays only one graph for one stock symbol only"))
        self.label_5.setText(
            _translate("Stocks", "Displays one graph with two stock symbols so that the user can compare them easily"))
        self.label_6.setText(
            _translate("Stocks", "Displays a table with Open, High, Low and Close values of a stock in a table"))
        self.equity.setText(_translate("Stocks", "Equity"))
        self.label_7.setText(_translate("Stocks", "Downloads Equity info of the stock in an excel file"))
        self.index.setText(_translate("Stocks", "Index"))
        self.label_8.setText(_translate("Stocks", "Downloads Index info of the stock in an excel file"))
        self.topg.setText(_translate("Stocks", "Top Gainers and Top Losers"))
        self.label_9.setText(_translate("Stocks", "Downloads the Top Gainers and Losers in an excel file"))
        self.label_10.setText(_translate("Stocks", "Downloads the Advances and Declines in an excel file"))
        self.ad.setText(_translate("Stocks", "Advances and Declines"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Stocks = QtWidgets.QMainWindow()
    ui = Ui_Stocks()
    ui.setupUi(Stocks)
    Stocks.show()
    sys.exit(app.exec_())
