# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'equity.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import pandas as pd
from nsetools import Nse

from openpyxl.workbook import Workbook

nse = Nse()


class Ui_Equity(object):
    def download(self):
        if self.stock_name.text() == "":
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)

            # setting message for Message Box
            msg.setText("Please enter a stock symbol")

            # setting Message box window title
            msg.setWindowTitle("Exception Error :(")

            # declaring buttons on Message Box
            msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)

            # start the app
            retval = msg.exec_()
            return
        tick = self.stock_name.text()
        inf = nse.get_quote(tick)

        # print("Company name is ",inf['companyName'])
        # print("Ticker symbol is ",inf['symbol'])
        # print("The series it belongs to ",inf['series'])
        # print("ISIN CODE ",inf['isinCode'])
        # print("Last recorded Price ",inf['lastPrice'])
        # print("Percentage change in price ",inf['pChange'])
        # print("Total Traded Volume ",inf['totalTradedVolume'])
        # print("Total Traded Value ",inf['totalTradedValue'])
        # print("Opening Price ",inf['open'])
        # print("Closing Price ",inf['closePrice'])
        # print("Face Value ",inf['faceValue'])
        # print("Average price is ",inf['averagePrice'])
        # print("Previous Closing Price ",inf['previousClose'])
        # print("Day Low ",inf['dayLow'])
        # print("Day High ",inf['dayHigh'])
        # print("Highest Price in 52 weeks ",inf['high52'])
        # print("Lowest Price in 52 weeks ",inf['low52'])

        dic = {'Company Name': inf['companyName'], "Ticker symbol": inf['symbol'], "Series": inf['series'],
               'ISIN CODE': inf['isinCode'], "Last Price": inf['lastPrice'], "Percentage Change": inf['pChange']
            , "Traded Volume": inf['totalTradedVolume'], "Traded Value": inf['totalTradedValue'],
               "Opening Price": inf['open'], "Closing Price": inf['closePrice'], "Face Value": inf['faceValue'],
               "Average Price": inf['averagePrice'],
               "Previous Close ": inf['previousClose'], "Day Low": inf['dayLow'], "Day High": inf['dayHigh'],
               "High 52": inf['high52'], "Low 52": inf['low52']}
        d = pd.DataFrame(pd.Series(dic))  # Creates a pandas table for displaying information
        # print(d)

        file_name = 'equity.xlsx'

        x = pd.ExcelWriter(file_name)  # Creates a pandas excel object
        d.to_excel(x)
        x.save()
        df = pd.read_excel(file_name)  # Reads the Excel file
        writer = pd.ExcelWriter('enhanced_equity.xlsx', engine='xlsxwriter')
        df.to_excel(writer, index=False, sheet_name="EQUITY")
        workbook = writer.book
        worksheet = writer.sheets['EQUITY']
        worksheet.set_zoom(90)
        # HEADER FORMATTING

        header_format = workbook.add_format({
            "valign": "vcenter",
            "align": "center",
            "bg_color": "FFCCCB",
            "bold": True,
            'font_color': "FFFFFF"})

        title = "EQUITY PRICES AND INFO"

        format = workbook.add_format()
        format.set_font_size(15)
        format.set_font_color("#333333")
        worksheet.merge_range('A1:AS1', title, format)
        money_fmt = workbook.add_format({'num_format': '$#,##0.00'})

        tot_fmt = workbook.add_format({
            'align': 'right', 'num_format': '$#,##0.00', 'bold': True
        })

        worksheet.set_column('A:F', 30)
        writer.save()

        msg = QMessageBox()
        msg.setIcon(QMessageBox.Information)

        # setting message for Message Box
        msg.setText("The requested excel file has been downloaded")

        # setting Message box window title
        msg.setWindowTitle("Downloaded")

        # declaring buttons on Message Box
        msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)

        # start the app
        retval = msg.exec_()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 466)
        MainWindow.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(260, 80, 281, 41))
        self.label.setStyleSheet("color: rgb(255, 255, 255);\n"
                                 "font: 14pt \"Comic Sans MS\";")
        self.label.setObjectName("label")
        self.stock_name = QtWidgets.QLineEdit(self.centralwidget)
        self.stock_name.setGeometry(QtCore.QRect(290, 200, 201, 41))
        self.stock_name.setStyleSheet("background-color: rgb(85, 170, 255);\n"
                                      "font: 10pt \"Comic Sans MS\";")
        self.stock_name.setText("")
        self.stock_name.setObjectName("stock_name")
        self.excel = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.download())
        self.excel.setGeometry(QtCore.QRect(260, 320, 261, 61))
        self.excel.setStyleSheet("background-color: rgb(85, 170, 255);\n"
                                 "font: 10pt \"Comic Sans MS\";")
        self.excel.setObjectName("excel")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Equity"))
        self.label.setText(_translate("MainWindow", "Enter stock symbol below"))
        self.excel.setText(_translate("MainWindow", "Click to download excel file"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_Equity()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
